"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageControlFactory = void 0;
const BrokerType_1 = require("../Common/BrokerType");
const KafkaMessageControl_1 = require("../Kafka/KafkaMessageControl");
const SnsMessageControl_1 = require("../SNS/SnsMessageControl");
const SqsMessageControl_1 = require("../SQS/SqsMessageControl");
class MessageControlFactory {
    static createControl(config) {
        switch (config.type) {
            case BrokerType_1.BrokerType.Kafka:
                return new KafkaMessageControl_1.KafkaMessageControl(config.params.consumer, config.params.topic, config.params.partition, config.params.offset);
            case BrokerType_1.BrokerType.SQS:
                return new SqsMessageControl_1.SqsMessageControl(config.params.sqsClient, config.params.queueUrl, config.params.receiptHandle);
            case BrokerType_1.BrokerType.SNS:
                return new SnsMessageControl_1.SnsMessageControl();
            default:
                throw new Error(`Unsupported broker type: ${config.type}`);
        }
    }
}
exports.MessageControlFactory = MessageControlFactory;
//# sourceMappingURL=MessageControlFactory.js.map